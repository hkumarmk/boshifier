concourse_target: cc1
deployments:
  redis:
    # Releases may be sourced two different ways
    # 1. Pull the code from any git repo and create the releases
    #   You have to provide params
    #   repo: git repo url
    #   branch: git branch
    #   Set boshio_release to false - defay
    # 2. Pull the bosh.io release
    #   provide below params
    #   repo: GitHub repository of the release, i.e. username/reponame (under https://bosh.io/d/github.com/username/reponame
    #   release_tarball: true/false - Fetch the release tarball or not
    #   boshio_release: true (Default is false)
    # Example:
    # 1. Pull the code from git repo and create releases
    # release:
    #   repo: "https://github.com/hkumarmk/redis-boshrelease.git"
    #   branch: master
    #
    # 2. Pull bosh.io release
    # release:
    #   repo: concourse/concourse
    #   boshio_release: true
    #
    # 3. Pull a release tarball
    # release:
    #   repo: cloudfoundry-community/redis-boshrelease
    #   boshio_release: true
    #   params:
    #     tarball: true
    #
    #
    releases:
      redis:
        repo: "https://github.com/hkumarmk/redis-boshrelease.git"
        branch: master
    # deployment manifest repo.
    manifest:
      repo: "https://github.com/hkumarmk/redis-boshrelease.git"
      # Path to deployment manifest within manifest repo default to manifest.yml
      path: manifests/redis.yml
    stemcells:
      - bosh-warden-boshlite-ubuntu-trusty-go_agent
    # Tests to be run. Currently only support running tests as
    # bosh errands.
    # Errands should be already deployed.
    tests:
      - sanity-tests
    # Vars will be passed on to deployment manifests
    # default vars will be overridden with any target bosh specific variables
    # target specific variables may be specified under specific bosh name
    # (i.e bosh_test_reg_a as you see below).
    vars:
      default:
        foo: bar
        bar: baz
      bosh_test_reg_a:
        foo: baz
        var1: value
      bosh_stage_reg_a:
        foo: val
        var2: val2
