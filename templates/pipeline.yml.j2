---
resources:
- name: bosh-deployment
  type: bosh-deployment
  source:
    ca_cert: ((director_ca_cert))
    target: ((director_address))
    client: ((director_username))
    client_secret: ((director_password))
    deployment: ((deployment_name))
{% for release_name, release_config in releases.items() %}
{% if release_config.get('boshio_release') %}

- name: bosh-release-get-{{ release_name }}
  type: bosh-io-release
  source:
    repository: {{ release_config['repo'] }}
{% else %}
- name: bosh-release-get-{{ release_name }}
  type: git
  source:
    uri: {{ release_config['repo'] }}
    branch: {{ release_config.get('branch', 'master') }}

{% endif %}
{% endfor %}

{% for stemcell_name in stemcells %}
- name: stemcell-{{ stemcell_name }}
  type: bosh-io-stemcell
  source:
    name: {{ stemcell_name }}

{% endfor %}
- name: bosh-deployment-manifest
  type: git
  source:
    uri: {{ manifest['repo']  }}
    branch: {{ manifest.get('branch', 'master') }}

resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

jobs:
- name: ((deployment_name))-deploy
  plan:
  - aggregate:
{% for stemcell_name in stemcells %}
    - get: stemcell-{{ stemcell_name }}
    - get: bosh-deployment-manifest
{% endfor %}
{% for release_name, release_config in releases.items() %}
    - get: bosh-release-get-{{ release_name }}
{% if release_config.get('params') %}
      params:
{% for param_name, param_value in release_config['params'].items() %}
        {{ param_name }}: {{ param_value }}
{% endfor %}
{% endif %}
{% endfor %}
  - aggregate:
{% for release_name, release_config in releases.items() %}
{% if not release_config.get('boshio_release') %}
    - task: create-release-{{ release_name }}
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: hkumar/bosh-cli-v2
        inputs:
        - name: bosh-release-get-{{ release_name }}
        run:
          path: bosh
          args: [create-release, --final, --tarball=../bosh-release-{{ release_name }}/release.tgz]
          dir: bosh-release-get-{{ release_name }}
        outputs:
        - name: bosh-release-{{ release_name }}
          path: ""
{% endif %}
{% endfor %}
  - put: bosh-deployment
    params:
      manifest: "bosh-deployment-manifest/{{ manifest.get('path', 'manifest.yml')}}"
      releases:
{% for release_name, release_config in releases.items() %}
{% if release_config.get('boshio_release') %}
      - bosh-release-get-{{ release_name }}/*.tgz
{% else %}
      - bosh-release-{{ release_name }}/*.tgz
{% endif %}
{% endfor %}
      stemcells:
{% for stemcell_name in stemcells %}
      - stemcell-{{ stemcell_name }}/*.tgz
{% endfor %}
